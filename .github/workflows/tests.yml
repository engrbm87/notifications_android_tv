name: Testing

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  DEFAULT_PYTHON: 3.9

jobs:
  pre-commit:
    name: Run pre-commit
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.0.2
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Create Python virtual environment
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install pre-commit==2.20.0
      - name: Install pre-commit dependencies
        run: |
          . venv/bin/activate
          pre-commit install
          pre-commit run --all-files

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.2
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.2.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install library
      run: poetry install --no-interaction

    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests/
